from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.types import (
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    KeyboardButton,
    ReplyKeyboardMarkup,
)
from aiogram.utils import executor

token = "7637175952:AAHgHoNsU0DlMAkIDPJ2AiWDLjxvdazRWcw"

bot = Bot(token=token)  # —Å–∞–º –±–æ—Ç
dp = Dispatcher(bot)

box_main = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)  # –∫–æ—Ä–æ–±–∫–∞
b1 = KeyboardButton(text="üòÖ")  # –∫–Ω–æ–ø–∫–∞
b2 = KeyboardButton(text="–§–æ—Ç–æ")
b3 = KeyboardButton(text="–°—Å—ã–ª–∫–∏")
box_main.add(b1, b2, b3)  # –∫–Ω–æ–ø–∫–∞

inl_box = InlineKeyboardMarkup()
inl_1 = InlineKeyboardButton(text="–°—Å—ã–ª–∫–∞ 1", url="https://replit.com/")
inl_2 = InlineKeyboardButton(
    text="–°—Å—ã–ª–∫–∞ 2",
    url="https://yandex.ru/images/search?from=tabbar&img_url=https%3A%2F%2Fpixy.org%2Fsrc%2F38%2F380438.jpg&lr=213&pos=3&rpt=simage&text=–ø–∏—Ç–æ–Ω",
)
inl_box.add(inl_1, inl_2)


inl_box2 = InlineKeyboardMarkup()
inl1 = InlineKeyboardButton(text="–°—Å—ã–ª–∫–∞ 1", callback_data="+")
inl2 = InlineKeyboardButton(text="–°—Å—ã–ª–∫–∞ 2", callback_data="-")
inl_box2.add(inl1, inl2)


@dp.message_handler(
    commands=["start", "go"]
)  # –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã. –¢–æ –µ—Å—Ç—å —Ñ—Ä–∞–∑–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å /
async def start(message: types.Message) -> None:
    await message.answer(
        text=f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}", reply_markup=box_main
    )  # –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é


@dp.callback_query_handler()
async def start_3(callback: types.CallbackQuery) -> None:
    if callback.data == "+":
        await callback.answer(text="–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–∞ –ø–ª—é—Å")
    elif callback.data == "-":
        await callback.answer(text="–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–∞ –º–∏–Ω—É—Å")


@dp.message_handler(content_types=["text"])
async def start_3(message: types.Message) -> None:
    if message.text.lower() == "üòÖ":
        await message.answer(text="–ù–µ –≤–æ–ª–Ω—É–π—Å—è)")
    elif message.text.lower() == "—Å—Å—ã–ª–∫–∏":
        await message.answer(text="–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É!", reply_markup=inl_box2)
    else:
        await message.answer(text="–ù–µ –ø–æ–Ω–∏–º–∞—é –æ —á–µ–º —Ä–µ—á—å")
    await message.delete()


executor.start_polling(dp, skip_updates=True)
